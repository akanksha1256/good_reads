{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","components/pages/NewQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","authorInputRef","useRef","textInputRef","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","NewQuote","navigate","useNavigate","useHttp","addQuote","sendRequest","status","useEffect","newQuote"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,0ECKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,wBCmE/BC,EA/DG,SAACL,GAEjB,IAAMM,EAAiBC,mBACjBC,EAAeD,mBAkBrB,OACE,mCAOE,cAAC,EAAD,UACE,uBACEN,UAAWC,IAAQO,KACnBC,SA3BR,SAA2BC,GACzBA,EAAMC,iBACN,IAAMC,EAAgBP,EAAeQ,QAAQC,MACvCC,EAAcR,EAAaM,QAAQC,MAEzCf,EAAMiB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,KAoB5C,UAKGhB,EAAMoB,WACL,qBAAKnB,UAAWC,IAAQmB,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAKrB,UAAWC,IAAQqB,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKrB,OAEtC,sBAAKL,UAAWC,IAAQqB,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKnB,OAEpC,qBAAKP,UAAWC,IAAQ2B,QAAxB,SACE,wBACE5B,UAAU,MADZ,iC,sBClCG6B,UAjBE,WACf,IAAMC,EAAWC,cACjB,EAAgCC,YAAQC,KAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAErBC,qBAAU,WACO,cAAXD,GACFL,EAAS,aAEV,CAACK,EAAQL,IAMZ,OAAO,cAAC,EAAD,CAAWd,WAJC,SAACqB,GAElBH,EAAYG,IAE4BlB,UAAWgB","file":"static/js/3.40ef0207.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__U_fwr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__1JydE\",\"loading\":\"QuoteForm_loading__2lWU9\",\"control\":\"QuoteForm_control__2qLAB\",\"actions\":\"QuoteForm_actions__1D0C2\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef, useState } from 'react';\n// import { Prompt } from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  // const [isFormFocused, setIsFormFocused] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  // const formFocusHandler = () => {\n  //   setIsFormFocused(true);\n  // };\n\n  // const doneFormEditing = () => {\n  //   setIsFormFocused(false);\n  // };\n\n  return (\n    <>\n      {/* <Prompt\n        when={isFormFocused}\n        message={() =>\n          'Are you sure you want to leave? All the form data will be lost'\n        }\n      /> */}\n      <Card>\n        <form\n          className={classes.form}\n          onSubmit={submitFormHandler}\n          // onFocus={formFocusHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor='author'>Author</label>\n            <input type='text' id='author' ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='text'>Text</label>\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button\n              className='btn'\n              //  onClick={doneFormEditing}\n            >\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </>\n  );\n};\n\nexport default QuoteForm;\n","import QuoteForm from '../quotes/QuoteForm';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport useHttp from '../../hooks/use-http';\r\nimport { addQuote } from '../../lib/api';\r\nimport { useEffect } from 'react';\r\n\r\nconst NewQuote = () => {\r\n  const navigate = useNavigate();\r\n  const { sendRequest, status } = useHttp(addQuote);\r\n\r\n  useEffect(() => {\r\n    if (status === 'completed') {\r\n      navigate('/quotes');\r\n    }\r\n  }, [status, navigate]);\r\n\r\n  const onAddQuote = (newQuote) => {\r\n    // console.log('new quote data', newQuote);\r\n    sendRequest(newQuote);\r\n  };\r\n  return <QuoteForm onAddQuote={onAddQuote} isLoading={status} />;\r\n};\r\n\r\nexport default NewQuote;\r\n"],"sourceRoot":""}